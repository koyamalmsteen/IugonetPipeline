<?xml version="1.0" encoding="utf-8" ?>
<project name="Pipeline" default="all" basedir="." xmlns:ac="antlib:net.sf.antcontlib">
  <property file="build.properties"/>
  <property environment="env"/>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="/usr/share/java/lib/ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <target name="all" depends="initial_message, clean, init, httpd, tomcat, final_message" description="All"/>

  <target name="initial_message">
    <echo message="###&#x0A;###&#x0A;&#xA;It takas about 1min.&#xA;&#x0A;###&#x0A;###&#x0A;"/>

  </target>

  <target name="clean" description="clean">
    <delete dir="${src}"/>
    <exec executable="/etc/init.d/httpd">
      <arg line="stop"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="httpd off"/>
    </exec>
  </target>

  <target name="clean_itb" description="clean itb and temporal files">
    <delete file="${tmp}/*.tmp1"/>
    <delete file="${tmp}/*.tmp2"/>
    <delete file="${tmp}/*.itb"/>
  </target>

  <target name="init" description="init">
    <mkdir dir="${src}"/>
    <exec executable="setenforce">
      <arg line="0"/>
    </exec>
<!--
    <exec executable="yum">
      <arg line="-y install gcc gcc-c++ bison expat-devel libicu-devel rpm-build httpd ruby ruby-devel rubygems libxml2-devel libxslt-devel wireshark wireshark-devel wireshark-gnome"/>
    </exec>
-->
  </target>

  <target name="CruiseControl" description="Install Cruise Control">
    <get src="${src_CruiseControl}" dest="${dst_CruiseControl}" usetimestamp="true"/>
    <unzip src="${dst_CruiseControl}" dest="${tmp}"/>
    <move file="${tmp}/${CruiseControl_prefix}" todir="/var/www/html"/>
  </target>

  <target name="tomcat" description="Install Apache Tomcat">
    <echo message='### for TOMCAT&#10;' file="${ENV_SET_FILE}" append="yes"/>
    <echo message='export TOMCAT_USER=dspace&#10;' file="${ENV_SET_FILE}" append="yes"/>
    <echo message='export CATALINA_HOME=${CATALINA_HOME}&#10;' file="${ENV_SET_FILE}" append="yes"/>
    <echo message='export PATH=${CATALINA_HOME}/bin:${PATH}&#10;' file="${ENV_SET_FILE}" append="yes"/>
    <get src="${src_tomcat}" dest="${dst_tomcat}" usetimestamp="true"/>
    <unzip src="${dst_tomcat}" dest="${install_dir}"/>
<!--
    <exec executable="tar">
      <arg value="xvzf"/>
      <arg value="${TEMP_DIR}/${TOMCAT_TGZ}"/>
      <arg value="- -directory"/>
      <arg value="${INSTALL_DIR}"/>
    </exec>
-->
    <exec executable="sudo">
      <arg value="ln"/>
      <arg value="-s"/>
      <arg value="${install_dir}/${tomcat_prefix}"/>
      <arg value="${catalina_home}"/>
    </exec>
    <exec executable="sudo">
      <arg value="chown"/>
      <arg value="-R"/>
      <arg value="dspace:dspace"/>
      <arg value="${INSTALL_DIR}/${TOMCAT}"/>
    </exec>
    <exec executable="sudo">
      <arg value="cp"/>
      <arg value="${WORK}/${CATALINA_HOME}/conf/server.xml"/>
      <arg value="${CATALINA_HOME}/conf"/>
    </exec>
  </target>

  <target name="final_message">
    <exec executable="/bin/bash" outputproperty="ip_address">
      <arg value="-c"/>
      <arg value="/sbin/ifconfig | awk '{if (NR==2){sub(&quot;addr:&quot;,&quot;&quot;,$2);print $2}}'"/>
    </exec>
    <echo message="###&#x0A;###&#x0A;&#x0A;Access to http://${ip_address}/${CruiseControl_prefix}/webapps/cruisecontrol/index.jsp&#x0A;&#x0A;###&#x0A;###&#x0A;"/>
  </target>

  <target name="httpd" description="Start httpd">
    <exec executable="/etc/init.d/httpd">
      <arg line="start"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="httpd on"/>
    </exec>
  </target>

</project>
